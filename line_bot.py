# -*- coding: utf-8 -*-
"""line_bot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1K3ODoDaN5lOwRNvOVi4mC9-d2-ooCl3R
"""

from flask import Flask, request, abort
from linebot import LineBotApi, WebhookHandler
from linebot.exceptions import InvalidSignatureError
from linebot.models import MessageEvent, TextMessage, TextSendMessage
import pya3rt

app = Flask(__name__)

#チャンネルアクセストークン
linebot_api = LineBotApi("aIkIi+43LiCABxONpi5MGmBIsYqJAVML1QgooBMjAfcJrLwegPRhBSm\
7lAFXPc2QRqCp10hRZ4HB7bJodq3B0zF7CzMg6NcGq5JDqR781ZEKeOPTMehVsUH+4JfPbIzpws\
NEDvxLRLlPBAOSwVvISwdB04t89/1O/w1cDnyilFU=")
#チャンネルシークレット値
handler = WebhookHandler("7acf66334df0aaaaf824f2fe4946a576")

@app.route("/callback",methods=['POST'])
def callback():
  #line platformから送られているか確認
  signature = request.headers["X-Line-Signature"]
  body = request.get_data(as_text=True)

  try:
    handler.handle(body, signature)
  except InvalidSignatureError:
    abort(400)
  
  return 'OK'

#add(イベントの種類,メッセージの種類)
@handler.add(MessageEvent, message=TextMessage)
def handler_message(event):
  #lineで送られたメッセージを格納
  ai_message = talk_ai(event.message.text)
  #lineメッセージを返す
  linebot_api.reply_message(event.reply_token, TextSendMessage(text=ai_message))


def talk_ai(word):
  apikey = "DZZt3A2mEKqmPw85C0vSv2QIVbm8pWma"
  client = pya3rt.TalkClient(apikey)
  replay_message = client.talk(word)
  return replay_message['results'][0]['reply']

if __name__ == '__main__':
  app.run()